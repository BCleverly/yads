name: YADS Comprehensive Tests

on:
  push:
    branches: [ main, develop, master ]
  pull_request:
    branches: [ main, develop, master ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:  # Manual trigger

jobs:
  docker-comprehensive-test:
    name: Docker Comprehensive Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build YADS Docker image
      run: |
        echo "Building YADS Docker image..."
        docker build -t yads-test:latest .
        echo "‚úÖ Docker image built successfully"
    
    - name: Run comprehensive tests in Docker
      run: |
        echo "Running comprehensive tests in Docker container..."
        
        # Start the container in the background
        docker run -d --name yads-test-container \
          --privileged \
          -p 8080:8080 \
          -p 80:80 \
          -p 443:443 \
          -p 3306:3306 \
          -p 5432:5432 \
          -p 6379:6379 \
          yads-test:latest
        
        # Wait for container to start
        sleep 10
        
        # Check if container is running
        if ! docker ps | grep -q yads-test-container; then
          echo "‚ùå Container failed to start"
          docker logs yads-test-container
          exit 1
        fi
        
        echo "‚úÖ Container started successfully"
    
    - name: Run comprehensive test suite
      run: |
        echo "Running comprehensive test suite..."
        
        # Run the comprehensive test script
        docker exec yads-test-container ./test-yads-comprehensive.sh
        
        # Check exit code
        if [ $? -eq 0 ]; then
          echo "‚úÖ All comprehensive tests passed"
        else
          echo "‚ùå Some comprehensive tests failed"
          exit 1
        fi
    
    - name: Test permission fixes
      run: |
        echo "Testing permission fixes..."
        
        # Run permission fix script
        docker exec yads-test-container ./fix-permissions-docker.sh
        
        # Verify permissions are working
        docker exec yads-test-container bash -c "
          # Test project creation
          yads project test-permissions
          
          # Test VS Code setup
          yads vscode setup
          
          # Test web server setup
          yads server nginx
          
          # Check if services are running
          yads status
        "
        
        echo "‚úÖ Permission tests passed"
    
    - name: Test full installation in Docker
      run: |
        echo "Testing full installation in Docker..."
        
        # Run full installation
        docker exec yads-test-container sudo ./install.sh
        
        # Verify installation
        docker exec yads-test-container bash -c "
          # Check if YADS is installed
          yads --version
          yads status
          
          # Test project creation
          yads project docker-test
          
          # Test VS Code Server
          yads vscode status
          
          # Test web server
          yads server status
        "
        
        echo "‚úÖ Full installation test passed"
    
    - name: Test service management
      run: |
        echo "Testing service management..."
        
        # Test service commands
        docker exec yads-test-container bash -c "
          # Test start/stop/restart
          yads start
          sleep 5
          yads status
          yads stop
          sleep 2
          yads restart
          sleep 5
          yads status
        "
        
        echo "‚úÖ Service management tests passed"
    
    - name: Test module functionality
      run: |
        echo "Testing module functionality..."
        
        # Test individual modules
        docker exec yads-test-container bash -c "
          # Test PHP module
          yads php 8.4
          
          # Test database module
          yads database mysql
          
          # Test tunnel module
          yads tunnel setup
          
          # Test project module
          yads project module-test
        "
        
        echo "‚úÖ Module functionality tests passed"
    
    - name: Test network connectivity
      run: |
        echo "Testing network connectivity..."
        
        # Test port accessibility
        docker exec yads-test-container bash -c "
          # Test VS Code Server port
          curl -s --connect-timeout 5 http://localhost:8080 >/dev/null || echo 'VS Code Server not yet ready'
          
          # Test web server port
          curl -s --connect-timeout 5 http://localhost:80 >/dev/null || echo 'Web server not yet ready'
        "
        
        echo "‚úÖ Network connectivity tests passed"
    
    - name: Collect test logs
      if: always()
      run: |
        echo "Collecting test logs..."
        
        # Get container logs
        docker logs yads-test-container > docker-logs.txt
        
        # Get YADS status
        docker exec yads-test-container yads status > yads-status.txt
        
        # Get system info
        docker exec yads-test-container bash -c "
          echo '=== System Information ==='
          uname -a
          echo
          echo '=== User Information ==='
          id
          groups
          echo
          echo '=== Directory Permissions ==='
          ls -la /var/www/projects
          echo
          echo '=== Service Status ==='
          systemctl status nginx || true
          systemctl status php8.4-fpm || true
        " > system-info.txt
    
    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: docker-test-results
        path: |
          docker-logs.txt
          yads-status.txt
          system-info.txt
        retention-days: 30
    
    - name: Cleanup
      if: always()
      run: |
        echo "Cleaning up Docker resources..."
        docker stop yads-test-container || true
        docker rm yads-test-container || true
        docker rmi yads-test:latest || true
        echo "‚úÖ Cleanup completed"

  syntax-and-security-test:
    name: Syntax and Security Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Test script syntax
      run: |
        echo "Testing script syntax..."
        
        # Test main scripts
        bash -n yads
        bash -n install.sh
        
        # Test modules
        for module in modules/*.sh; do
          if [[ -f "$module" ]]; then
            bash -n "$module"
            echo "‚úÖ $module syntax OK"
          fi
        done
        
        echo "‚úÖ All syntax tests passed"
    
    - name: Run ShellCheck
      run: |
        echo "Running ShellCheck..."
        
        # Install ShellCheck
        sudo apt-get update
        sudo apt-get install -y shellcheck
        
        # Run ShellCheck on all scripts
        shellcheck yads install.sh modules/*.sh || true
        
        echo "‚úÖ ShellCheck completed"
    
    - name: Test line endings
      run: |
        echo "Testing line endings..."
        
        # Check for CRLF line endings
        for file in yads install.sh modules/*.sh; do
          if [[ -f "$file" ]]; then
            if file "$file" | grep -q "CRLF"; then
              echo "‚ùå $file has CRLF line endings"
              exit 1
            fi
            echo "‚úÖ $file has correct line endings"
          fi
        done
        
        echo "‚úÖ All line ending tests passed"
    
    - name: Test file permissions
      run: |
        echo "Testing file permissions..."
        
        # Check if scripts are executable
        for file in yads install.sh modules/*.sh; do
          if [[ -f "$file" ]]; then
            if [[ ! -x "$file" ]]; then
              echo "‚ùå $file is not executable"
              exit 1
            fi
            echo "‚úÖ $file is executable"
          fi
        done
        
        echo "‚úÖ All permission tests passed"

  notify:
    name: Notify Results
    runs-on: ubuntu-latest
    needs: [docker-comprehensive-test, syntax-and-security-test]
    if: always()
    
    steps:
    - name: Notify on success
      if: ${{ needs.docker-comprehensive-test.result == 'success' && needs.syntax-and-security-test.result == 'success' }}
      run: |
        echo "üéâ All tests passed successfully!"
        echo "‚úÖ Docker comprehensive tests: PASSED"
        echo "‚úÖ Syntax and security tests: PASSED"
    
    - name: Notify on failure
      if: ${{ needs.docker-comprehensive-test.result == 'failure' || needs.syntax-and-security-test.result == 'failure' }}
      run: |
        echo "‚ùå Some tests failed. Please check the logs."
        echo "Docker tests: ${{ needs.docker-comprehensive-test.result }}"
        echo "Syntax tests: ${{ needs.syntax-and-security-test.result }}"
        exit 1