version: '3.8'

# YADS Custom Containers
# Add your own custom containers here
# This file is automatically loaded by YADS alongside the core services

services:
  # Example: Laravel Application
  # Uncomment and modify as needed
  # laravel-app:
  #   image: php:8.2-fpm-alpine
  #   container_name: yads-laravel-app
  #   restart: unless-stopped
  #   volumes:
  #     - ./projects/laravel-app:/var/www/html
  #   networks:
  #     - yads-network
  #   depends_on:
  #     - mysql
  #     - redis
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.laravel-app.rule=Host(`laravel.${DOMAIN:-localhost}`)"
  #     - "traefik.http.routers.laravel-app.entrypoints=websecure"
  #     - "traefik.http.routers.laravel-app.tls.certresolver=cloudflare"
  #     - "traefik.http.services.laravel-app.loadbalancer.server.port=9000"

  # Example: Node.js Application
  # Uncomment and modify as needed
  # node-app:
  #   build:
  #     context: ./projects/node-app
  #     dockerfile: Dockerfile
  #   container_name: yads-node-app
  #   restart: unless-stopped
  #   volumes:
  #     - ./projects/node-app:/app
  #   networks:
  #     - yads-network
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.node-app.rule=Host(`node.${DOMAIN:-localhost}`)"
  #     - "traefik.http.routers.node-app.entrypoints=websecure"
  #     - "traefik.http.routers.node-app.tls.certresolver=cloudflare"
  #     - "traefik.http.services.node-app.loadbalancer.server.port=3000"

  # Example: WordPress Site
  # Uncomment and modify as needed
  # wordpress-site:
  #   image: wordpress:latest
  #   container_name: yads-wordpress-site
  #   restart: unless-stopped
  #   environment:
  #     - WORDPRESS_DB_HOST=mysql
  #     - WORDPRESS_DB_NAME=wordpress
  #     - WORDPRESS_DB_USER=${MYSQL_USER:-yads}
  #     - WORDPRESS_DB_PASSWORD=${MYSQL_PASSWORD:-yads123}
  #   volumes:
  #     - ./projects/wordpress-site:/var/www/html
  #   networks:
  #     - yads-network
  #   depends_on:
  #     - mysql
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.wordpress-site.rule=Host(`wordpress.${DOMAIN:-localhost}`)"
  #     - "traefik.http.routers.wordpress-site.entrypoints=websecure"
  #     - "traefik.http.routers.wordpress-site.tls.certresolver=cloudflare"
  #     - "traefik.http.services.wordpress-site.loadbalancer.server.port=80"

  # Example: Python Django Application
  # Uncomment and modify as needed
  # django-app:
  #   build:
  #     context: ./projects/django-app
  #     dockerfile: Dockerfile
  #   container_name: yads-django-app
  #   restart: unless-stopped
  #   volumes:
  #     - ./projects/django-app:/app
  #   networks:
  #     - yads-network
  #   depends_on:
  #     - postgres
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.django-app.rule=Host(`django.${DOMAIN:-localhost}`)"
  #     - "traefik.http.routers.django-app.entrypoints=websecure"
  #     - "traefik.http.routers.django-app.tls.certresolver=cloudflare"
  #     - "traefik.http.services.django-app.loadbalancer.server.port=8000"

  # Example: Static Site with Nginx
  # Uncomment and modify as needed
  # static-site:
  #   image: nginx:alpine
  #   container_name: yads-static-site
  #   restart: unless-stopped
  #   volumes:
  #     - ./projects/static-site:/usr/share/nginx/html
  #   networks:
  #     - yads-network
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.static-site.rule=Host(`static.${DOMAIN:-localhost}`)"
  #     - "traefik.http.routers.static-site.entrypoints=websecure"
  #     - "traefik.http.routers.static-site.tls.certresolver=cloudflare"
  #     - "traefik.http.services.static-site.loadbalancer.server.port=80"

# Extend the core network
networks:
  yads-network:
    external: true
