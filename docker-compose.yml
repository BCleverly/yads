version: '3.8'

services:
  # Traefik - Reverse Proxy and Load Balancer
  traefik:
    image: traefik:v3.0
    container_name: yads-traefik
    restart: unless-stopped
    command:
      - --api.dashboard=true
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.cloudflare.acme.tlschallenge=true
      - --certificatesresolvers.cloudflare.acme.email=${ACME_EMAIL:-admin@example.com}
      - --certificatesresolvers.cloudflare.acme.storage=/acme.json
      - --certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.cloudflare.acme.dnschallenge.delaybeforecheck=60s
      - --certificatesresolvers.cloudflare.acme.dnschallenge.resolvers=1.1.1.1:53,1.0.0.1:53
      - --global.checkNewVersion=false
      - --global.sendAnonymousUsage=false
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    environment:
      - CF_DNS_API_TOKEN=${CLOUDFLARE_API_TOKEN}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./data/traefik/acme.json:/acme.json
      - ./data/traefik/traefik.yml:/etc/traefik/traefik.yml:ro
    networks:
      - yads-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN:-localhost}`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=cloudflare"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"

  # Cloudflared Tunnel
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: yads-cloudflared
    restart: unless-stopped
    command: tunnel --no-autoupdate run --token ${CLOUDFLARE_TUNNEL_TOKEN}
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN}
    networks:
      - yads-network
    depends_on:
      - traefik

  # VS Code Server
  vscode-server:
    image: codercom/code-server:latest
    container_name: yads-vscode-server
    restart: unless-stopped
    environment:
      - PASSWORD=${VSCODE_PASSWORD:-yads123}
      - SUDO_PASSWORD=${VSCODE_SUDO_PASSWORD:-yads123}
    volumes:
      - ./data/vscode:/home/coder
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./projects:/home/coder/projects
    networks:
      - yads-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vscode.rule=Host(`code.${DOMAIN:-localhost}`)"
      - "traefik.http.routers.vscode.entrypoints=websecure"
      - "traefik.http.routers.vscode.tls.certresolver=cloudflare"
      - "traefik.http.services.vscode.loadbalancer.server.port=8080"
      - "traefik.http.routers.vscode.middlewares=vscode-auth"
      - "traefik.http.middlewares.vscode-auth.basicauth.users=${VSCODE_BASIC_AUTH}"

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: yads-mysql
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-yads123}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-yads}
      - MYSQL_USER=${MYSQL_USER:-yads}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-yads123}
    volumes:
      - ./data/mysql:/var/lib/mysql
      - ./config/mysql:/etc/mysql/conf.d
    ports:
      - "3306:3306"
    networks:
      - yads-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mysql.rule=Host(`mysql.${DOMAIN:-localhost}`)"
      - "traefik.http.routers.mysql.entrypoints=websecure"
      - "traefik.http.routers.mysql.tls.certresolver=cloudflare"
      - "traefik.http.services.mysql.loadbalancer.server.port=3306"

  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: yads-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-yads}
      - POSTGRES_USER=${POSTGRES_USER:-yads}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-yads123}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./config/postgres:/etc/postgresql
    ports:
      - "5432:5432"
    networks:
      - yads-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.postgres.rule=Host(`postgres.${DOMAIN:-localhost}`)"
      - "traefik.http.routers.postgres.entrypoints=websecure"
      - "traefik.http.routers.postgres.tls.certresolver=cloudflare"
      - "traefik.http.services.postgres.loadbalancer.server.port=5432"

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: yads-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-yads123}
    volumes:
      - ./data/redis:/data
    ports:
      - "6379:6379"
    networks:
      - yads-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.redis.rule=Host(`redis.${DOMAIN:-localhost}`)"
      - "traefik.http.routers.redis.entrypoints=websecure"
      - "traefik.http.routers.redis.tls.certresolver=cloudflare"
      - "traefik.http.services.redis.loadbalancer.server.port=6379"

  # PHP-FPM with multiple versions
  php-fpm:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: yads-php-fpm
    restart: unless-stopped
    volumes:
      - ./projects:/var/www/html
      - ./config/php:/usr/local/etc/php/conf.d
    networks:
      - yads-network
    depends_on:
      - mysql
      - postgres
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.php.rule=Host(`php.${DOMAIN:-localhost}`)"
      - "traefik.http.routers.php.entrypoints=websecure"
      - "traefik.http.routers.php.tls.certresolver=cloudflare"
      - "traefik.http.services.php.loadbalancer.server.port=9000"

  # Nginx Web Server - Shared Multi-Project Server
  nginx:
    image: nginx:alpine
    container_name: yads-nginx
    restart: unless-stopped
    volumes:
      - ./projects:/var/www/html
      - ./config/nginx:/etc/nginx/conf.d
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./logs/nginx:/var/log/nginx
    networks:
      - yads-network
    depends_on:
      - php-fpm
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`nginx.${DOMAIN:-localhost}`)"
      - "traefik.http.routers.nginx.entrypoints=websecure"
      - "traefik.http.routers.nginx.tls.certresolver=cloudflare"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"
      # Wildcard routing for project subdomains
      - "traefik.http.routers.projects.rule=HostRegexp(`{subdomain:[a-zA-Z0-9-]+}.${DOMAIN:-localhost}`)"
      - "traefik.http.routers.projects.entrypoints=websecure"
      - "traefik.http.routers.projects.tls.certresolver=cloudflare"
      - "traefik.http.services.projects.loadbalancer.server.port=80"

  # phpMyAdmin for MySQL management
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: yads-phpmyadmin
    restart: unless-stopped
    environment:
      - PMA_HOST=mysql
      - PMA_USER=${MYSQL_USER:-yads}
      - PMA_PASSWORD=${MYSQL_PASSWORD:-yads123}
    networks:
      - yads-network
    depends_on:
      - mysql
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.phpmyadmin.rule=Host(`phpmyadmin.${DOMAIN:-localhost}`)"
      - "traefik.http.routers.phpmyadmin.entrypoints=websecure"
      - "traefik.http.routers.phpmyadmin.tls.certresolver=cloudflare"
      - "traefik.http.services.phpmyadmin.loadbalancer.server.port=80"

  # pgAdmin for PostgreSQL management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: yads-pgadmin
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL:-admin@example.com}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:-yads123}
    volumes:
      - ./data/pgadmin:/var/lib/pgadmin
    networks:
      - yads-network
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.${DOMAIN:-localhost}`)"
      - "traefik.http.routers.pgadmin.entrypoints=websecure"
      - "traefik.http.routers.pgadmin.tls.certresolver=cloudflare"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=80"

  # Portainer for Docker management
  portainer:
    image: portainer/portainer-ce:latest
    container_name: yads-portainer
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/portainer:/data
    networks:
      - yads-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.${DOMAIN:-localhost}`)"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.tls.certresolver=cloudflare"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"

networks:
  yads-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  mysql-data:
  postgres-data:
  redis-data:
  vscode-data:
  portainer-data:
